{"version":3,"sources":["index.js","checker.js","collector.js","filter.js","ia.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,ACHA,AHSA;ACFA,ACHA,ACHA,AHSA;ACFA,ACHA,ACHA,AHSA;ACFA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["const checker = require('./checker')\nconst collector = require('./collector')\nconst filter = require('./filter')\nconst ia = require('./ia')\n\nmodule.exports = {\n  checker,\n  collector,\n  filter,\n  ia\n}\n","// 检验涨跌比\nfunction check (codeList, startDate, endDate) {\n  const upList = []\n  const downList = []\n  codeList.forEach((item) => {\n    const { code, buy, sale } = item\n    const changePercent = ((sale.trade - buy.trade) / buy.trade * 100).toFixed(2) + '%'\n    if (changePercent > 0) {\n      console.log('涨', code, `${changePercent}%`)\n      upList.push(item)\n    } else {\n      console.log('跌', code, `${changePercent}%`)\n      downList.push(item)\n    }\n  })\n  console.log(`总(${codeList.length})，涨跌比(${upList.length}:${downList.length})`)\n}\n\nfunction checkSingleStock (code, startDate, endDate) {\n  // const { code, buy, sale } = item\n  //   const changePercent = ((sale.trade - buy.trade) / buy.trade * 100).toFixed(2) + '%'\n}\n\nmodule.exports = {\n  check\n}\n","const axios = require('axios')\nconst asyncUtil = require('async')\nconst dayjs = require('dayjs')\n\n/**\n * 获取股票2年半的行情数据\n * @param {string} code 股票代码\n * @returns {promise<array>} 获取股票2年半的行情数据，返回数据格式 - 0日期 ，1开盘价， 2最高价， 3收盘价， 4最低价， 5成交量， 6价格变动 ，7涨跌幅，5日均价，10日均价，20日均价，5日均量，10日均量，20日均量，换手率\n{\n  date: item[0],\n  code,\n  open: Number(item[1]),\n  high: Number(item[2]),\n  trade: Number(item[3]),\n  low: Number(item[4]),\n  volume: Number(item[5]),\n  pricechange: Number(item[6]),\n  changepercent: Number(item[7]),\n  price5: Number(item[8]),\n  price10: Number(item[9]),\n  price20: Number(item[10]),\n  volume5: Number(item[11].replace(/,/g, '')),\n  volume10: Number(item[12].replace(/,/g, '')),\n  volume20: Number(item[13].replace(/,/g, '')),\n  turnoverratio: Number(item[14])\n}\n */\nasync function getHistory (code, startDate, endDate) {\n  try {\n    if (typeof code !== 'string') {\n      throw (Error(`code应该为string，但接收到的是${typeof code}`))\n    }\n    const symbol = ['5', '6', '9'].indexOf(code.charAt(0)) >= 0 ? `sh${code}` : `sz${code}`\n    const res = await axios.get(`http://api.finance.ifeng.com/akdaily/?type=fq&code=${symbol}`)\n    const recordList = res.data.record\n    const data = recordList.map((item) => {\n      return {\n        date: item[0],\n        code,\n        open: Number(item[1]),\n        high: Number(item[2]),\n        trade: Number(item[3]),\n        low: Number(item[4]),\n        volume: Number(item[5]),\n        pricechange: Number(item[6]),\n        changepercent: Number(item[7]),\n        price5: Number(item[8]),\n        price10: Number(item[9]),\n        price20: Number(item[10]),\n        volume5: Number(item[11].replace(/,/g, '')),\n        volume10: Number(item[12].replace(/,/g, '')),\n        volume20: Number(item[13].replace(/,/g, '')),\n        turnoverratio: Number(item[14])\n      }\n    })\n    if (!startDate && !endDate) {\n      return data\n    } else {\n      const startIndex = data.findIndex((item) => {\n        return item.date === startDate\n      })\n      const endIndex = data.findIndex((item) => {\n        return item.date === endDate\n      })\n      const newData = data.slice(startIndex, endIndex + 1)\n      return newData\n    }\n  } catch (err) {\n    console.log(err)\n    return []\n  }\n}\n\n/**\n * 查看指定日期是否开盘\n * @param {string} date 日期，如'2021-08-08'\n * @returns {promise<boolean>} true or false\n */\nasync function isOpen (date = '') {\n  const res = await axios.get(`http://tool.bitefu.net/jiari/?d=${date}`)\n  return Number(res.data) === 0\n}\n\n/**\n * 获取今日全部股票行情\n * @returns {promise<array>} 数组，某一个item，如下：\n{\n  date: '2021-08-08',\n  amount: 361594492\n  buy: \"37.840\"\n  changepercent: -0.132\n  code: \"002138\"\n  high: \"38.280\"\n  low: \"37.100\"\n  mktcap: 3051914.96989\n  name: \"顺络电子\"\n  nmc: 2690487.12155\n  open: \"37.930\"\n  pb: 6.003\n  per: 51.149\n  pricechange: -0.05\n  sell: \"37.850\"\n  settlement: \"37.900\"\n  symbol: \"sz002138\"\n  ticktime: \"15:00:03\"\n  trade: \"37.850\"\n  turnoverratio: 1.34741\n  volume: 9577808\n}\n */\nfunction getTodayAll () {\n  return new Promise((resolve, reject) => {\n    const urlList = []\n    for (let index = 1; index <= 45; index++) {\n      const url = `http://vip.stock.finance.sina.com.cn/quotes_service/api/json_v2.php/Market_Center.getHQNodeData?num=100&sort=changepercent&asc=0&node=hs_a&symbol=&_s_r_a=page&page=${index}`\n      urlList.push(url)\n    }\n    asyncUtil.mapLimit(urlList, 2, async (url) => {\n      const res = await axios.get(url)\n      console.log(`获取到${res.data.length}条行情数据`)\n      return res.data\n    }, (err, results) => {\n      if (err) reject(err)\n      else {\n        let res = []\n        results.forEach((itemlist) => {\n          res = res.concat(itemlist)\n        })\n        const date = dayjs().format('YYYY-MM-DD')\n        const realRes = res.map((item) => {\n          const { symbol, code, name, trade, pricechange, changepercent, buy, sell, settlement, open, high, low, volume, amount, ticktime, per, pb, mktcap, nmc, turnoverratio } = item\n          Number()\n          return {\n            date: date,\n            symbol,\n            code,\n            name,\n            trade: Number(trade),\n            pricechange,\n            changepercent,\n            buy: Number(buy),\n            sell: Number(sell),\n            settlement: Number(settlement),\n            open: Number(open),\n            high: Number(high),\n            low: Number(low),\n            volume,\n            amount,\n            ticktime,\n            per,\n            pb,\n            mktcap,\n            nmc,\n            turnoverratio\n          }\n        })\n        resolve(realRes)\n      }\n    })\n  })\n}\n\nmodule.exports = {\n  getHistory,\n  getTodayAll,\n  isOpen\n}\n","// 移除ST\nfunction removeST (list) {\n  return list.filter((item) => {\n    return !(/(ST)/.test(item.name))\n  })\n}\n\n// 移除科创股，因为我还没法买\nfunction removeKechuang (list) {\n  return list.filter((item) => {\n    return item.code.substring(0, 3) !== '688'\n  })\n}\n\n// 红T\nfunction getRedT (list) {\n  return list.filter((item) => {\n    const { open, high, low, trade, changepercent } = item\n    const divH = Math.abs(trade - open)\n    const lineUpH = Math.abs(high - trade)\n    const lineDownH = open - low\n    return changepercent > 0.9 && (lineUpH / divH) < 0.05 && (lineDownH / divH) > 1\n  })\n}\n\n// 真红T\nfunction getRealRedT (list) {\n  return list.filter((item) => {\n    const { open, high, low, trade } = item\n    const divH = Math.abs(trade - open)\n    const lineDownH = open - low\n    return trade === high && (lineDownH / divH) > 1\n  })\n}\n\n// 获取创业股\nfunction getChuangye (list) {\n  return list.filter((item) => {\n    return item.code[0] === '3'\n  })\n}\n\n// 移除涨停\nfunction removeLimitUp (list) {\n  return list.filter((item) => {\n    const { changepercent } = item\n    return Number(changepercent) < 9\n  })\n}\n\n// 筛选出涨停\nfunction getLimitUp (list) {\n  return list.filter((item) => {\n    const { changepercent } = item\n    return Number(changepercent) > 9\n  })\n}\n\n// 筛选出大于1亿金额的股票\nfunction getBigAmount (list) {\n  return list.filter((item) => {\n    let { amount } = item\n    amount = Number(amount)\n    return amount > 100000000\n  })\n}\n\n// 按价格筛选\nfunction getByPrice (list, lowPrice = 0, highPrice = 3000) {\n  return list.filter((item) => {\n    const trade = Number(item.trade)\n    return trade > lowPrice && trade < highPrice\n  })\n}\n\n// 筛选出高换手率的股票\nfunction getHighRatio (list, huanshoulv = 5) {\n  return list.filter((item) => {\n    const ratio = Number(item.turnoverratio)\n    return ratio > huanshoulv\n  })\n}\n\nmodule.exports = {\n  removeST,\n  removeKechuang,\n  getRedT,\n  getRealRedT,\n  getChuangye,\n  removeLimitUp,\n  getLimitUp,\n  getBigAmount,\n  getHighRatio,\n  getByPrice\n}\n","function _ema (lastEma, closePrice, units) {\n  return (lastEma * (units - 1) + closePrice * 2) / (units + 1)\n}\nfunction _dea (lastDea, curDiff) {\n  return (lastDea * 8 + curDiff * 2) / 10\n}\n/**\n * 获取macd\n * @param {array} ticks 价格数组\n * @returns obj，如下：{\n  macds,\n  diffs,\n  deas\n}\n */\nfunction macd (ticks) {\n  const ema12 = []\n  const ema26 = []\n  const diffs = []\n  const deas = []\n  const macds = []\n  ticks.forEach((c, i) => {\n    if (i === 0) {\n      ema12.push(c)\n      ema26.push(c)\n      deas.push(0)\n    } else {\n      ema12.push(_ema(ema12[i - 1], c, 12))\n      ema26.push(_ema(ema26[i - 1], c, 26))\n    }\n    diffs.push(ema12[i] - ema26[i])\n    if (i !== 0) {\n      deas.push(_dea(deas[i - 1], diffs[i]))\n    }\n    macds.push((diffs[i] - deas[i]) * 2)\n  })\n\n  return {\n    macds,\n    diffs,\n    deas\n  }\n}\n\nmodule.exports = {\n  macd\n}\n"]}